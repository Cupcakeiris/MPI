Инструкции
Реализовать уникальные пользовательские операции для MPI_Reduce, которые выполняют сложные вычисления на распределённых данных.
- Напишите программы на C++, использующие MPI_Op_create для реализации и регистрации пользовательских операций.
- Эти операции должны включать более сложные вычисления и более глубокую обработку данных, чем стандартные.

Варианты сложных операций для реализации:

   - Поиск наибольшей разности между средними значениями:
     Каждый процесс вычисляет своё среднее значение из набора данных, а затем операция находит два процесса с наибольшими отличиями между средними и возвращает их индексы и разность. Это полезно, например, в анализе разброса данных между процессами.

   - Выбор взвешенного медианного значения:
     Для каждого процесса задано значение и вес. Пользовательская операция сначала выполняет сбор всех значений и весов, а затем вычисляет медиану с учетом весов. Это сложный процесс, требующий сортировки данных и выбора медианного элемента в одном из процессов.

   - Нахождение минимума максимальных разностей между процессами:
     Каждый процесс вычисляет максимальное и минимальное значения из своих данных, затем определяет их разность. MPI_Reduce находит минимальное значение этих разностей среди всех процессов, что полезно для балансировки данных.

Требования:
   - Используйте функции MPI_Op_create и MPI_Reduce для создания и применения операций.
   - Функции редукции должны следовать сигнатуре: void user_defined_operation(void* invec, void* inoutvec, int* len, MPI_Datatype* datatype).
   - Программы должны корректно работать с разными числами процессов.
   - Проверьте работу каждой операции на наборе тестовых данных.
   - Постройте графики времени выполнения для разных чисел процессов (например, от 1 до 10).
   - Оптимизируйте код для уменьшения накладных расходов MPI, используя буферы и минимальное количество операций с памятью.
Защита обязательно