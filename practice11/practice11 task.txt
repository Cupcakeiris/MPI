1. Численное решение
   - Использовать метод конечных разностей для дискретизации.
   - Разбить глобальную сетку NxM на блоки, которые обрабатываются каждым процессом.
   - Использовать метод Якоби, верхней релаксации или метод Гаусса-Зейделя для итерационного решения.
2. Распараллеливание
   - Организовать процессы в виде двумерной декартовой топологии с помощью MPI.
   - Реализовать блочное разделение данных между процессами.
   - Обеспечить обмен граничными данными между соседними процессами.
3. Сравнение:
   - Сравнить численное решение с аналитическим решением, если оно известно, или с численным последовательным решением.
   - Сравнить время выполнения последовательного и параллельного решения.
Дополнительные требования:
1. Использовать только те функции MPI, которые уже были изучены (например, MPI_Cart_create, MPI_Cart_coords, MPI_Cart_shift).
2. Вывод результатов:
   - Графики численного и аналитического можно строить в TechPlot, gnuplot, python или Excel.
   - Вывести глобальную ошибку (разницу между численным и аналитическим решением).
Формат сдачи:
1. Исходный код программы на C++.
2. Графики численного и аналитического решений.
3. Отчёт с описанием:
   - Постановки задачи.
   - Метода решения.
   - Результатов (сравнение графиков и времени работы алгоритмов).
Будет проведена защита, на которой каждый студент должен объяснить свою реализацию.